/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

plugins {
    // Apply the scala Plugin to add support for Scala.
    scala
    id("io.dmarkwat.twitter.finagle.common-conventions")
}

repositories {
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name = "sonatype"
        url = uri("https://oss.sonatype.org/content/repositories/snapshots")
    }
}

val otelVersion: String by extra
val otelAlphaVersion: String by extra
val otelJavaagentVersion: String by extra
val otelJavaagentAlphaVersion: String by extra

val finagleVersion: String by extra
val scalaVersion: String by extra
val scalaMinor: String by extra

val scalified: (String) -> String by extra

dependencies {
    constraints {
        // Define dependency versions as constraints
        implementation("org.scala-lang:scala-library:$scalaVersion")

        implementation("${scalified("org.scalatest:scalatest")}:3.2.14")
        implementation("junit:junit:4.13.2")
        implementation("${scalified("org.scalatestplus:junit-4-13")}:3.2.14.0")

        implementation("io.opentelemetry:opentelemetry-api:${otelVersion}")
        implementation("io.opentelemetry:opentelemetry-sdk:${otelVersion}")
        implementation("io.opentelemetry:opentelemetry-opencensus-shim:${otelAlphaVersion}")
        implementation("io.opentelemetry:opentelemetry-semconv:${otelAlphaVersion}")
        implementation("io.opentelemetry.javaagent:opentelemetry-testing-common:$otelAlphaVersion")
        implementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure-spi:$otelVersion")

        implementation("${scalified("com.twitter:util-core")}:$finagleVersion")
        implementation("${scalified("com.twitter:finagle-core")}:$finagleVersion")
        implementation("${scalified("com.twitter:finagle-http")}:$finagleVersion")

        runtimeOnly("ch.qos.logback:logback-classic:1.2.10")
    }

    // Use Scala $scalaMinor in our library project
    implementation("org.scala-lang:scala-library")

    testImplementation(scalified("org.scalatest:scalatest"))
    testImplementation("junit:junit")
    testImplementation(scalified("org.scalatestplus:junit-4-13"))
    testRuntimeOnly("com.vladsch.flexmark:flexmark-all:0.35.10")

    testRuntimeOnly("ch.qos.logback:logback-classic")
}

// didn't work;
// used this instead: https://docs.gradle.org/current/samples/sample_building_scala_applications.html
//
//testing {
//    suites {
//        // Configure the built-in test suite
//        val test by getting(JvmTestSuite::class) {
//            // Use JUnit Jupiter test framework
//            useJUnitJupiter("5.8.2")
//        }
//    }
//}
